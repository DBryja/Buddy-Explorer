<% if (typeof libs !== 'undefined') { %> <% for (let lib of libs) { %>
<script src="/libs/<%= lib %>.js" type="text/javascript"></script>
<% } } %>

<style>
  .inline {
    display: inline;
  }
  .change {
    display: inline;
    cursor: pointer;
    color: rgb(3, 3, 83);
  }
  .current {
    color: white;
  }
  .popup {
    position: absolute;
    inset: 0;
    margin: auto;
    background-color: rgba(0, 0, 0, 0.5);
    height: 60vh;
    aspect-ratio: 1;
    background-color: #574040;
    z-index: 100;
  }
  .wrap.active::after {
    content: "";
    display: block;
    position: absolute;
    z-index: 1;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
  }
  .hidden {
    display: none;
  }
  .active {
    display: block;
  }
</style>
<script>
  let guide = JSON.parse(`<%- JSON.stringify(guide) %>`);
  delete guide.profile_pic;

  const togglePopup = () => {
    document.querySelector(".popup").classList.toggle("hidden");
    document.querySelector(".wrap").classList.toggle("active");
  };

  const renderForm = (type, guide) => {
    let content = "";
    switch (type) {
      case "nickname":
        content = `
        <span>Nazwa Użytkownika:<span><input type="text" name="nickname" value="${guide.nickname}"/>
        `;
        break;
      case "fullname":
        content = `
        <span>Imię i Nazwisko:<span><input type="text" name="fullname" value="${guide.fullname}"/>
          `;
        break;
      case "desc":
        content = `
        <span>Opis:<span><textarea name="desc">${guide.desc.replaceAll("<br />", "\n")}</textarea>
        `;
        break;
      case "password":
        content = `
        <span>Aktualne hasło:<span><input type="password" name="pswd_current"/>
        <span>Nowe hasło:<span><input type="password" name="password" id="password" />
        <span>Potwierdź hasło:<span><input type="password" name="passwordConfirmation" id="passwordConfirmation"/>
        `;
        break;
      case "county":
        content = `
        <div id="counties_Searchbars">
        <span></span>
        <% guide.regs.forEach((item) =>{ %>
            <div class="autocomplete_box">
              <input type="text" class="county_autocomplete county" placeholder="powiat" name="county" autocomplete="off" value="<%=item%>"></span>
              <button class="item_delete prevent">Usuń</button>
              <div class="cities_container"></div>
            </div>
        <% }) %>
        </div>
        <button class="county_add prevent">dodaj powiat</button>
        `;
        break;
      case "city":
        content = `
        <div id="cities_Searchbars">
        <span></span>
          <% guide.cities.forEach((item) =>{ %>
            <div class="autocomplete_box">
              <input type="text" class="city_autocomplete city" placeholder="miasto" name="city" autocomplete="off" value="<%=item%>"">
              <button class="item_delete prevent">Usuń</button>
              <div class="counties_container"></div>
            </div>
        <% }) %>
      </div>
      <button class="city_add prevent">dodaj miasto</button>
        `;
        break;
      case "profile_pic":
        content = `
        <span>Zdjęcie profilowe:</span><input type="file" name="profile_pic" accept=".jpg, .jpeg, .png" required="false" />
          `;
        break;
    }
    return content;
  };

  const popUpForm = (type) => {
    const inside = document.querySelector(".inside__form");
    // let enctype = "application/x-www-form-urlencoded";
    // if (type === "profile_pic") enctype = """
    let form = `<form method="POST" enctype="multipart/form-data" action="/guide/profile/${type}">
    ${renderForm(type, guide)}
    <input type="hidden" name="guide_id" value="${guide.guideId}">
    <input type="submit" class="submit" value="Zatwierdź zmiany">
    </form>`;
    inside.innerHTML = form;

    if (type === "city" || type === "county") {
      document.querySelectorAll(".prevent").forEach((item) => {
        item.addEventListener("click", (e) => e.preventDefault());
      });
      if (type === "city") {
        addCityListener();
        let citiesSearchbars = document.querySelectorAll(".city_autocomplete");
        SearchbarsForeach(citiesSearchbars, "cities");
      } else {
        addCountyListener();
        let countiesSearchbars = document.querySelectorAll(".county_autocomplete");
        SearchbarsForeach(countiesSearchbars, "counties");
      }
      removeItemListener();
    }
  };

  const formChange = document.querySelectorAll(".change");
  formChange.forEach((item) => {
    item.addEventListener("click", (e) => {
      const datakey = e.target.dataset.key;
      popUpForm(datakey);
      togglePopup();
    });
  });

  document.querySelectorAll(".popup__btn").forEach((item) => {
    item.addEventListener("click", () => {
      togglePopup();
    });
  });
  document.body.addEventListener("click", (e) => {
    if (e.target === document.querySelector(".wrap.active")) {
      togglePopup();
    }
  });
  removeItemListener();
</script>

<!-- jakis blad przy usuwaniu -->